
version: '3.8'

services:
  autorl-backend:
    build: .
    ports:
      - "8000:8000"
      - "9090:9090"  # Prometheus metrics port
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - QDRANT_URL=http://qdrant:6333
      - APPIUM_HOST=appium
      - APPIUM_PORT=4723
      - PORT=8000
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - ENABLE_PII_MASKING=true
      - JWT_SECRET=${JWT_SECRET}
      - TESSERACT_CMD=/usr/bin/tesseract
      - DEBUG=false
      - RELOAD=false
    depends_on:
      qdrant:
        condition: service_healthy
      appium:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - autorl-network
    
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - autorl-network

  appium:
    image: appium/appium:latest
    ports:
      - "4723:4723"
    command: ["appium", "--base-path", "/wd/hub"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4723/wd/hub/status"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - autorl-network

  frontend:
    build:
      context: ./autorl_project/autorl-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000/ws/metrics
    depends_on:
      - autorl-backend
    networks:
      - autorl-network

  landing-page:
    build:
      context: ./autorl_project/landing-page
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - autorl-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - autorl-network

volumes:
  qdrant_storage:

networks:
  autorl-network:
    driver: bridge

